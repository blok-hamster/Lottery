import { CompilerOptions } from '@0x/sol-compiler';
import * as config from '../config';
/**
 * Generate solidity artifacts for all of the solidity versions under a specified contract
 * directory.
 *
 * @param conf The application configuration, e.g. where to read solidity files, where to output, etc..
 */
export declare function compileAll(conf: config.App): Promise<void[]>;
/**
 * Create options for sol-compiler instance that reads in a subdirectory of smart contracts e.g. (src/v0.4, src/v0.5, ..)
 * and outputs their respective compiler artifacts e.g. (abi/v0.4, abi/v0.5)
 *
 * @param config The application specific configuration to use for sol-compiler
 * @param subDir The subdirectory to use as a namespace when reading .sol files and outputting
 * their respective artifacts
 * @param solcVersion The solidity compiler version to use with sol-compiler
 */
export declare function getCompilerOptions({ artifactsDir, useDockerisedSolc, contractsDir, compilerSettings, }: config.App, subDir: string, solcVersion: string): CompilerOptions;
//# sourceMappingURL=solc.d.ts.map